#time complexity: O(m*n)
#space complexity: O(n)
#did it run on leetcode: yes
class Solution:
    def maximalSquare(self, matrix: List[List[str]]) -> int:
        if not matrix: return 0
        rows, cols = len(matrix), len(matrix[0])
        dp = [0]*(cols+1)
        max_side = 0
        prev = 0
        for i in range(1,rows+1):
            for j in range(1, cols+1):
                temp = dp[j]
                if matrix[i-1][j-1] =='1':
                    dp[j] = min(dp[j-1],prev,dp[j])+1
                    max_side = max(max_side, dp[j])
                else:
                    dp[j]=0

                prev=temp
        return max_side*max_side
